
&НаКлиенте
Процедура ТранзакцииВалютаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Транзакции.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ПриИзмененииВалютыНаСервере(ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВалютыНаСервере(ИдентификаторСтроки)
	СтрокаТЧ = Объект.Транзакции.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	МассивСтрок = Объект.Транзакции.НайтиСтроки(Новый Структура("Клиент", СтрокаТЧ.Клиент));
	Для Каждого СтрокаМассива Из МассивСтрок Цикл
		СтрокаМассива.Валюта = СтрокаТЧ.Валюта;
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура ТранзакцииКоличествоПриИзменении(Элемент)
	РасчитатьСумму(Элементы.Транзакции.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТранзакцииЦенаПриИзменении(Элемент)
	РасчитатьСумму(Элементы.Транзакции.ТекущиеДанные);	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьСумму(СтрокаТЧ)
	Если СтрокаТЧ <> Неопределено Тогда
		СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Объект.Транзакции.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
  СтандартнаяОбработка = Ложь;

  Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
  Диалог.Фильтр = "Документ Excel (*.xlsx;*.xls)|*.xlsx;*.xls";
  Диалог.Заголовок = "Выберите документ Excel";
  Диалог.МножественныйВыбор = Ложь;

  ОповещениеЗавершения = Новый ОписаниеОповещения("ОкончаниеВыбораФайлаЗагрузки", ЭтотОбъект);
  
  Диалог.Показать(ОповещениеЗавершения); 
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораФайлаЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Объект.ПутьКФайлу = Результат[0];	
КонецПроцедуры

#Область Загрузка
// Структура для загрузки.
// 
// Возвращаемое значение:
//  Структура - Структура для загрузки:
// * АдресВоВременномХранилище - Строка - 
// * ПапкаЗаправок - Неопределено -
// * РеквизитПоискаНоменклатуры - Строка - 
// * РасширениеФайла - Строка - 
&НаКлиенте
Функция СтруктураПараметрыЗагрузки()
	Структура = Новый Структура;
	Структура.Вставить("АдресВоВременномХранилище", "");
	Структура.Вставить("ПапкаЗаправок", Неопределено);
	Структура.Вставить("РеквизитПоискаНоменклатуры", "");
	Структура.Вставить("РасширениеФайла", "");
	
	Возврат Структура; 
КонецФункции	

&НаКлиенте
Процедура ЗагрузкаБеларусьнефть(Команда)
	ЗагрузкаЗаправкинаКлиенте("ИДБеларусьнефть", ЗагрузкаБеларусьнефь);		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаТранзитКард(Команда)
	ЗагрузкаЗаправкинаКлиенте("ИДТранзиткарт", ЗагрузкаТранзитКард);	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаТатнефть(Команда)
	ЗагрузкаЗаправкинаКлиенте("ИДТатнефть", ЗагрузкаТатнефть);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаЛукойлБеларусь(Команда)
	ЗагрузкаЗаправкинаКлиенте("ИДЛукойл", ЗагрузкаЛукойлБеларусь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаБелтол(Команда)
	ЗагрузкаЗаправкинаКлиенте("ИДБелтол", ЗагрузкаБелтол);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаЗаправкинаКлиенте(РеквизитПоискаНоменклатуры, МодульЗагрузки)
	Если ПустаяСтрока(Объект.ПутьКФайлу) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите файл загрузки", , "Объект.ПутьКФайлу");
		Возврат;
	КонецЕсли;
	СтруктураПараметрыЗагрузки = СтруктураПараметрыЗагрузки();
	
	ДвоичныеДанные = Новый ДвоичныеДанные(Объект.ПутьКФайлу);
	ПутьВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	Файл = Новый Файл(Объект.ПутьКФайлу);
	
	СтруктураПараметрыЗагрузки.АдресВоВременномХранилище = ПутьВременногоХранилища;
	СтруктураПараметрыЗагрузки.ПапкаЗаправок = Объект.ПапкаЗаправок;
	СтруктураПараметрыЗагрузки.РеквизитПоискаНоменклатуры = РеквизитПоискаНоменклатуры;
	СтруктураПараметрыЗагрузки.РасширениеФайла = Файл.Расширение;
	
	СтруктураЗагрузки = МодульЗагрузки.ПолучитьСтруктуруЗагрузки(СтруктураПараметрыЗагрузки);
	ЗагрузитьРезультат(СтруктураЗагрузки);
	Если Объект.Ошибки.Количество() > 0 Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОшибки;
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультат(СтруктураЗагрузки)
	Объект.Ошибки.Очистить();
	Если Не СтруктураЗагрузки.Результат Тогда
		Для Каждого Ошибка Из СтруктураЗагрузки.МассивОшибок Цикл
			ОбщегоНазначения.СообщитьПользователю(Ошибка);			
		КонецЦикла;	
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаМассива Из СтруктураЗагрузки.МассивСтрок Цикл
		СтруктураПоиска = Новый Структура("ДатаТранзакции, Карта, Цена, Количество");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаМассива);
		МассивПоиска = Объект.Транзакции.НайтиСтроки(СтруктураПоиска);
		Если МассивПоиска.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = Объект.Транзакции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМассива);
		Если Не ЗначениеЗаполнено(СтрокаМассива.Карта) Тогда
			ДобавитьОшибку(СтрШаблон("Не найдена карта:%1", СтрокаМассива.КартаСтрока));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаМассива.Продукт) Тогда
			ДобавитьОшибку(СтрШаблон("Не найден продукт:%1", СтрокаМассива.ПродуктСтрока));
		КонецЕсли;	
	КонецЦикла;	
	Объект.Транзакции.Сортировать("Клиент, ДатаТранзакции");
	ТаблицаОшибки = Объект.Ошибки.Выгрузить();
	ТаблицаОшибки.Свернуть("ТекстОшибки");
	Объект.Ошибки.Загрузить(ТаблицаОшибки);
КонецПроцедуры
#КонецОбласти

#Область Сравнение

&НаКлиенте
Процедура СравнитьБеларусьнефть(Команда)
	СравнениеЗаправкинаКлиенте("ИДБеларусьнефть", ЗагрузкаБеларусьнефь);
КонецПроцедуры

&НаКлиенте
Процедура СравнитьБелтол(Команда)
	СравнениеЗаправкинаКлиенте("ИДБелтол", ЗагрузкаБелтол);
КонецПроцедуры

&НаКлиенте
Процедура СравнитьЛукойлБеларусь(Команда)
	СравнениеЗаправкинаКлиенте("ИДЛукойл", ЗагрузкаЛукойлБеларусь);
КонецПроцедуры

&НаКлиенте
Процедура СравнитьТатнефть(Команда)
	СравнениеЗаправкинаКлиенте("ИДТатнефть", ЗагрузкаТатнефть);
КонецПроцедуры

&НаКлиенте
Процедура СравнитьТранзиткард(Команда)
	СравнениеЗаправкинаКлиенте("ИДТранзиткарт", ЗагрузкаТранзитКард);
КонецПроцедуры

&НаКлиенте
Процедура СравнениеЗаправкинаКлиенте(РеквизитПоискаНоменклатуры, МодульЗагрузки)
	Если ПустаяСтрока(Объект.ПутьКФайлу) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите файл загрузки", , "Объект.ПутьКФайлу");
		Возврат;
	КонецЕсли;
	СтруктураПараметрыЗагрузки = СтруктураПараметрыЗагрузки();
	
	ДвоичныеДанные = Новый ДвоичныеДанные(Объект.ПутьКФайлу);
	ПутьВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	Файл = Новый Файл(Объект.ПутьКФайлу);
	
	СтруктураПараметрыЗагрузки.АдресВоВременномХранилище = ПутьВременногоХранилища;
	СтруктураПараметрыЗагрузки.ПапкаЗаправок = Объект.ПапкаЗаправок;
	СтруктураПараметрыЗагрузки.РеквизитПоискаНоменклатуры = РеквизитПоискаНоменклатуры;
	СтруктураПараметрыЗагрузки.РасширениеФайла = Файл.Расширение;
	
	СтруктураЗагрузки = МодульЗагрузки.ПолучитьСтруктуруЗагрузки(СтруктураПараметрыЗагрузки);
	ТабличныйДокумент = СравнитьСДаннымиВДокументе(СтруктураЗагрузки);
	ТабличныйДокумент.Показать("Сравнение с данными в документе");
КонецПроцедуры

// Сравнить с данными в документе.
// 
// Параметры:
//  СтруктураЗагрузки - См. СтруктураПараметрыЗагрузки()
//  
// Возвращаемое значение:
//  ТабличныйДокумент - Сравнить с данными в документе
&НаСервере
Функция СравнитьСДаннымиВДокументе(СтруктураЗагрузки)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетСравнения");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	ТаблицаСравнения = Новый ТаблицаЗначений;
	ТаблицаСравнения.Колонки.Добавить("КартаСсылка", Новый ОписаниеТипов("СправочникСсылка.Карточки"));
	ТаблицаСравнения.Колонки.Добавить("КоличествоВДокументе", Новый ОписаниеТипов("Число"));
	ТаблицаСравнения.Колонки.Добавить("КоличествоВФайле", Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаРезультата Из СтруктураЗагрузки.МассивСтрок Цикл
		НоваяСтрока = ТаблицаСравнения.Добавить();
		НоваяСтрока.КартаСсылка = СтрокаРезультата.Карта;
		НоваяСтрока.КоличествоВФайле = СтрокаРезультата.Количество;
	КонецЦикла;	
	
	Для Каждого СтрокаДокумента Из Объект.Транзакции Цикл
		НоваяСтрока = ТаблицаСравнения.Добавить();
		НоваяСтрока.КартаСсылка = СтрокаДокумента.Карта;
		НоваяСтрока.КоличествоВДокументе = СтрокаДокумента.Количество;
	КонецЦикла;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСравнения", ТаблицаСравнения);
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаСравнения.КартаСсылка,
	|	ТаблицаСравнения.КоличествоВДокументе,
	|	ТаблицаСравнения.КоличествоВФайле
	|ПОМЕСТИТЬ ВТ_Сравнение
	|ИЗ
	|	&ТаблицаСравнения КАК ТаблицаСравнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сравнение.КартаСсылка,
	|	СУММА(ВТ_Сравнение.КоличествоВДокументе) КАК КоличествоВДокументе,
	|	СУММА(ВТ_Сравнение.КоличествоВФайле) КАК КоличествоВФайле
	|ПОМЕСТИТЬ ВТ_СравнениеСвертка
	|ИЗ
	|	ВТ_Сравнение КАК ВТ_Сравнение
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Сравнение.КартаСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СравнениеСвертка.КартаСсылка,
	|	ВТ_СравнениеСвертка.КоличествоВДокументе КАК КоличествоВДокументе,
	|	ВТ_СравнениеСвертка.КоличествоВФайле КАК КоличествоВФайле,
	|	ВТ_СравнениеСвертка.КоличествоВФайле - ВТ_СравнениеСвертка.КоличествоВДокументе КАК КоличествоРасхождение
	|ИЗ
	|	ВТ_СравнениеСвертка КАК ВТ_СравнениеСвертка
	|ГДЕ
	|	(ВТ_СравнениеСвертка.КоличествоВФайле - ВТ_СравнениеСвертка.КоличествоВДокументе) <> 0
	|ИТОГИ
	|	СУММА(КоличествоВДокументе),
	|	СУММА(КоличествоВФайле),
	|	СУММА(КоличествоРасхождение)
	|ПО
	|	ОБЩИЕ";
	
	НомерПункта = 0;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();
	
	ВыборкаЗаписи = ВыборкаОбщийИтог.Выбрать();
	Пока ВыборкаЗаписи.Следующий() Цикл
		НомерПункта = НомерПункта + 1;
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаЗаписи);
		ОбластьСтрока.Параметры.НомерПункта = НомерПункта;
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;	
	ОбластьИтог.Параметры.Заполнить(ВыборкаОбщийИтог);	
	ТабличныйДокумент.Вывести(ОбластьИтог);
	
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	ТабличныйДокумент.ФиксацияСверху = 2;
	
	Возврат ТабличныйДокумент;
КонецФункции

#КонецОбласти

&НаСервере
Процедура ДобавитьОшибку(ТекстОшибки)
	НоваяСтрока = Объект.Ошибки.Добавить();
	НоваяСтрока.ТекстОшибки = ТекстОшибки;	
КонецПроцедуры

