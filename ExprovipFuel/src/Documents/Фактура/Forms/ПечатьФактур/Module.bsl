
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("СтруктураПечати") = Ложь Тогда
		Возврат;
	КонецЕсли;	
	ЗаполнитьТаблицуПечати(Параметры.СтруктураПечати);
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для Каждого СтрокаТаблица Из ТаблицаПечати Цикл
		СтрокаТаблица.Выбран = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для Каждого СтрокаТаблица Из ТаблицаПечати Цикл
		СтрокаТаблица.Выбран = Ложь;
	КонецЦикла;	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получить последний номер печати.
// 
// Возвращаемое значение:
//  Число - Получить последний номер печати
&НаСервере
Функция ПолучитьПоследнийНомерПечати()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(НомераФактур.НомерФактуры) КАК ПоследнийНомерФактуры
	|ИЗ
	|	РегистрСведений.НомераФактур КАК НомераФактур";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПоследнийНомерФактуры;
	Иначе
		Возврат 0;
	КонецЕсли;		
КонецФункции	

&НаСервере
Процедура ЗаполнитьТаблицуПечати(СтруктураПечати)
	ТаблицаКлиентов = Новый ТаблицаЗначений;
	ТаблицаКлиентов.Колонки.Добавить("Клиент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаКлиентов.Колонки.Добавить("Фактура", Новый ОписаниеТипов("ДокументСсылка.Фактура"));
	ТаблицаКлиентов.Колонки.Добавить("ЭтапОплаты", Новый ОписаниеТипов("Число"));
	
	Для Каждого ЭлементМассива ИЗ СтруктураПечати.Клиенты Цикл
		НоваяСтрока = ТаблицаКлиентов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементМассива);
	КонецЦикла;	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаКлиентов", ТаблицаКлиентов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаКлиентов.Клиент КАК Контрагент,
	|	ТаблицаКлиентов.Фактура КАК Фактура,
	|	ТаблицаКлиентов.ЭтапОплаты КАк ЭтапОплаты
	|ПОМЕСТИТЬ ВТ_ТаблицаКлиентов
	|ИЗ
	|	&ТаблицаКлиентов КАК ТаблицаКлиентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаКлиентов.Контрагент КАК Контрагент,
	|	ВТ_ТаблицаКлиентов.Фактура,
	|	ВТ_ТаблицаКлиентов.ЭтапОплаты,
	|	ЕСТЬNULL(НомераФактур.НомерФактуры, 0) КАК НомерФактуры
	|ИЗ
	|	ВТ_ТаблицаКлиентов КАК ВТ_ТаблицаКлиентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераФактур КАК НомераФактур
	|		ПО ВТ_ТаблицаКлиентов.Контрагент = НомераФактур.Контрагент
	|		И ВТ_ТаблицаКлиентов.Фактура = НомераФактур.Фактура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	ЭтапОплаты";
	
	ПоследнийНомерПечати = ПолучитьПоследнийНомерПечати();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.НомерФактуры = 0 Тогда
			ПоследнийНомерПечати = ПоследнийНомерПечати + 1;
			НомерФактуры = ПоследнийНомерПечати;
			СоздатьНомерФактуры(Выборка.Контрагент, Выборка.Фактура, НомерФактуры);
		Иначе
			НомерФактуры = Выборка.НомерФактуры;	
		КонецЕсли;
		НоваяСтрока = ТаблицаПечати.Добавить();
		НоваяСтрока.Контрагент = Выборка.Контрагент;
		НоваяСтрока.ЭтапОплаты = Выборка.ЭтапОплаты;
		НоваяСтрока.НомерФактуры = НомерФактуры;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНомерФактуры(Контрагент, Фактура, НомерФактуры)
	МенеджерЗаписи = РегистрыСведений.НомераФактур.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Контрагент = Контрагент;
	МенеджерЗаписи.Фактура = Фактура;
	МенеджерЗаписи.НомерФактуры = НомерФактуры;
	МенеджерЗаписи.Записать();
КонецПроцедуры	

#КонецОбласти
