#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ВзаиморасчетыСКлиентами();
	ВзаиморасчетыПоставщики();
	ОборотыТоплива();
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если СуммаЗаДороги = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПоставщикДороги");
	КонецЕсли;
	УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура УдалитьНепроверяемыеРеквизитыИзМассива(МассивРеквизитов, МассивНепроверяемыхРеквизитов)

  Для Каждого ЭлементМассива Из МассивНепроверяемыхРеквизитов Цикл
    ПорядковыйНомер = МассивРеквизитов.Найти(ЭлементМассива);
    Если ПорядковыйНомер <> Неопределено Тогда
      МассивРеквизитов.Удалить(ПорядковыйНомер);
    КонецЕсли; 
  КонецЦикла;
 
КонецПроцедуры

Процедура ВзаиморасчетыСКлиентами()
	Движения.ВзаиморасчетыКлиенты.Записывать = Истина;
	Для Каждого СтрокаТранзакции Из Транзакции Цикл
		Движение = Движения.ВзаиморасчетыКлиенты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = СтрокаТранзакции.Клиент;
		Движение.Валюта = СтрокаТранзакции.Валюта;
		Движение.Сумма = СтрокаТранзакции.Итого;
		Движение.ДатаТранзакции = СтрокаТранзакции.ДатаТранзакции;
	КонецЦикла;	
КонецПроцедуры

Процедура ВзаиморасчетыПоставщики()
	МассивДороги = Новый Массив();
	МассивДороги.Добавить("Drogi");
	МассивДороги.Добавить("Terminal");
	МассивДороги.Добавить("Powrot oplaty za drogi");
	МассивДороги.Добавить("Zwrot Terminala");	
	
	ИтогСуммаЗаДороги = 0;
	
	ВалютаBYR = Справочники.Валюты.НайтиПоКоду("933");
	Движения.ВзаиморасчетыПоставщики.Записывать = Истина;
	Для Каждого СтрокаТранзакции Из Транзакции Цикл
		Если СтрокаТранзакции.ВалютаПоставщика <> ВалютаBYR Тогда			
			Движение = Движения.ВзаиморасчетыПоставщики.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Контрагент = СтрокаТранзакции.Поставщик;
			Движение.Валюта = ВалютаBYR;
			Движение.ДатаТранзакции = СтрокаТранзакции.ДатаТранзакции;
			Движение.Сумма = СтрокаТранзакции.Цена * СтрокаТранзакции.Количество;
		КонецЕсли;	
		
		Если МассивДороги.Найти(СокрЛП(СтрокаТранзакции.Продукт)) <> Неопределено Тогда	
						
			ТекСуммаЗаДороги =  СтрокаТранзакции.Цена * СтрокаТранзакции.Количество;
			
			ИтогСуммаЗаДороги = ИтогСуммаЗаДороги + ТекСуммаЗаДороги;						 
		КонецЕсли;		 
	КонецЦикла;
	
	Если СуммаЗаДороги <> 0 Тогда
		//На сумму дорог	
		Движение = Движения.ВзаиморасчетыПоставщики.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = ПоставщикДороги;
		Движение.Валюта = ВалютаBYR;
		Движение.ДатаТранзакции = Дата;
		Движение.Сумма = СуммаЗаДороги;
	КонецЕсли; 
	
	Если ИтогСуммаЗаДороги <> 0 И КурсЗаДороги <> 0 Тогда
		Движение = Движения.ВзаиморасчетыПоставщики.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = ПоставщикДороги;
		Движение.Валюта = ВалютаBYR;
		Движение.ДатаТранзакции = Дата;
		Движение.СуммаДороги = ИтогСуммаЗаДороги / КурсЗаДороги;
	КонецЕсли;	
КонецПроцедуры

Процедура ОборотыТоплива()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТранзакции", Транзакции.Выгрузить());
	//@skip-check ql-temp-table-index
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаТранзакции.Клиент КАК Контрагент,
	|	ТаблицаТранзакции.Карта,
	|	ТаблицаТранзакции.Продукт КАК Продукт,
	|	ТаблицаТранзакции.Количество,
	|	ТаблицаТранзакции.ДатаТранзакции
	|ПОМЕСТИТЬ ВТ_Транзакции
	|ИЗ
	|	&ТаблицаТранзакции КАК ТаблицаТранзакции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продукт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Транзакции.Контрагент,
	|	ВТ_Транзакции.Карта,
	|	ВТ_Транзакции.Продукт,
	|	ВТ_Транзакции.Количество,
	|	ВТ_Транзакции.ДатаТранзакции,
	|	Номенклатура.ЭтоДороги
	|ПОМЕСТИТЬ ВТ_ТранзакцииИНоменклатура
	|ИЗ
	|	ВТ_Транзакции КАК ВТ_Транзакции
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_Транзакции.Продукт = Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТранзакцииИНоменклатура.Контрагент,
	|	ВТ_ТранзакцииИНоменклатура.Карта,
	|	ВТ_ТранзакцииИНоменклатура.Продукт,
	|	ВТ_ТранзакцииИНоменклатура.Количество,
	|	ВТ_ТранзакцииИНоменклатура.ДатаТранзакции,
	|	ВТ_ТранзакцииИНоменклатура.ЭтоДороги
	|ИЗ
	|	ВТ_ТранзакцииИНоменклатура КАК ВТ_ТранзакцииИНоменклатура
	|ГДЕ
	|	НЕ ВТ_ТранзакцииИНоменклатура.ЭтоДороги";
	
	Движения.ОборотыТоплива.Записывать = Истина;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОборотыТоплива.Добавить();
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);				 
	КонецЦикла;		
КонецПроцедуры

#КонецОбласти

#КонецЕсли