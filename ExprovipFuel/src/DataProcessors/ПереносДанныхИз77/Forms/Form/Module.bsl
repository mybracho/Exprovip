// @strict-types

&НаКлиенте
Перем Сервер77 Экспорт;

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнформационнаяБазаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
 	СтандартнаяОбработка = Ложь;
 	ПодключитьСервер();
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяБазаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ОтключитьСервер();
КонецПроцедуры
#КонецОбласти

#Область ПодключениеК77

&НаКлиенте
Функция СерверПодключен() Экспорт
    
    Если ТипЗнч(Сервер77)<>Тип("COMОбъект") Тогда
        Объект.ИнформационнаяБаза = "";
        Возврат Ложь;
    КонецЕсли; 
    
    Попытка
        Объект.ИнформационнаяБаза = Сервер77.Метаданные.Идентификатор;
        Возврат Истина;
    Исключение
        Возврат Ложь;
    КонецПопытки;
    
КонецФункции

&НаКлиенте
Функция ОтключитьСервер() Экспорт
    
    Если НЕ СерверПодключен() Тогда
        Возврат Истина;
    КонецЕсли;
    
    Попытка
        Сервер77.ЗавершитьРаботуСистемы(0);
        Результат = Истина;
    Исключение
        Результат = Ложь;
    КонецПопытки;
    
    Сервер77 = Неопределено;
    Объект.ИнформационнаяБаза = "";
    
    Возврат Результат;
    
КонецФункции

&НаКлиенте
Функция ПодключитьСервер() Экспорт	
    
    Если СерверПодключен() Тогда
        ОтключитьСервер();	
    КонецЕсли;
    
    Попытка
        Сервер77 = Новый COMObject("V1CEnterprise.Application"); 
    Исключение
    	ТекстСообщения = "Ошибка создания приложения:" + Символы.ПС + ОписаниеОшибки();
    	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
        Возврат Ложь;
    КонецПопытки;
    
    Попытка
    	Сервер77.Initialize (Сервер77.RMTrade,"/M","NO_SPLASH_SHOW");
    Исключение
        ТекстСообщения = ("Ошибка открытия информационной базы:" + Символы.ПС + ОписаниеОшибки());
        ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
        Возврат Ложь;
    КонецПопытки;
    
    Попытка
        //Сообщить("Получение имени конфигурации");
        Объект.ИнформационнаяБаза = Сервер77.Метаданные.Идентификатор;
    Исключение
        ТекстСообщения = ("Ошибка получения имени конфигурации:" + Символы.ПС + ОписаниеОшибки());
        ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
        Возврат Ложь;
    КонецПопытки;
    
    Возврат Истина;
    
КонецФункции

#КонецОбласти

#Область ЗагрузкаНоменклатуры

&НаКлиенте
Процедура ЗагрузкаНоменклатуры(Команда)
	
    СправочникНоменклатура = Сервер77.CreateObject("Справочник.Номенклатура");
    СправочникНоменклатура.ВыбратьЭлементы();
    МассивСтруктур = Новый Массив;
    
    Счетчик = 0;
    МассивНоменклатуры = Новый Массив; //Массив Структур
    Пока СправочникНоменклатура.ПолучитьЭлемент() = 1 Цикл
        Если СправочникНоменклатура.ПометкаУдаления() Тогда
            Продолжить;
        КонецЕсли; 
       
        
        ТекущийЭлементНоменклатуры = СправочникНоменклатура.ТекущийЭлемент();
        СтруктураНоменклатуры = СтруктураНоменклатуры();
        СтруктураНоменклатуры.Наименование = ТекущийЭлементНоменклатуры.Наименование;
		СтруктураНоменклатуры.ИД77 = Сервер77.ЗначениеВСтрокуВнутр(ТекущийЭлементНоменклатуры);
        Если ТекущийЭлементНоменклатуры.ЭтоДороги = 1 Тогда
        	СтруктураНоменклатуры.ЭтоДороги = Истина;
        КонецЕсли;
		СтруктураНоменклатуры.ИДБелтол = ТекущийЭлементНоменклатуры.ИДБелтол;
		СтруктураНоменклатуры.ИДБеларусьнефть = ТекущийЭлементНоменклатуры.ИДБеларусьнефть;
		СтруктураНоменклатуры.ИДТранзиткарт = ТекущийЭлементНоменклатуры.ИДТранзиткарт;
		СтруктураНоменклатуры.ИДТатнефть = ТекущийЭлементНоменклатуры.ИДТатнефть;
         
        МассивНоменклатуры.Добавить(СтруктураНоменклатуры);
    КонецЦикла;
  	СоздатьНоменклатуру(МассивНоменклатуры);
  	ОбщегоНазначенияКлиент.СообщитьПользователю("Номенклатура загружена");
КонецПроцедуры

// Структура номенклатуры.
// 
// Возвращаемое значение:
//  Структура - Структура номенклатуры:
// * Наименование - Строка
// * ИД77 - Строка 
// * ЭтоДороги - Булево
// * ИДБелтол - Строка
// * ИДБеларусьнефть - Строка 
// * ИДТранзиткарт - Строка
// * ИДТатнефть - Строка
&НаКлиенте
Функция СтруктураНоменклатуры()
	Структура = Новый Структура();
	Структура.Вставить("Наименование", "");
	Структура.Вставить("ИД77", "");
	Структура.Вставить("ЭтоДороги", Ложь);
	Структура.Вставить("ИДБелтол", "");
	Структура.Вставить("ИДБеларусьнефть", "");
	Структура.Вставить("ИДТранзиткарт", "");
	Структура.Вставить("ИДТатнефть", "");
	
	Возврат Структура;	
КонецФункции

// Создать номенклатуру.
// 
// Параметры:
//  МассивНоменклатуры - Массив из См. СтруктураНоменклатуры() 
&НаСервере
Процедура СоздатьНоменклатуру(МассивНоменклатуры)
	Для Каждого ЭлементМассива Из МассивНоменклатуры Цикл
		НоменклатураСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Идентификатор77", ЭлементМассива.ИД77);
		Если ЗначениеЗаполнено(НоменклатураСсылка) Тогда
			НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
		Иначе
			НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
			НоменклатураОбъект.Идентификатор77 = ЭлементМассива.ИД77;	
		КонецЕсли;
		НоменклатураОбъект.ЭтоДороги = ЭлементМассива.ЭтоДороги;
		НоменклатураОбъект.Наименование = ЭлементМассива.Наименование;
		НоменклатураОбъект.НаименованиеПолное = ЭлементМассива.Наименование;
		НоменклатураОбъект.ЭтоДороги = ЭлементМассива.ЭтоДороги; 
		
		МассивИД = Новый Массив;
		МассивИД.Добавить("ИДБелтол");
		МассивИД.Добавить("ИДБеларусьнефть");
		МассивИД.Добавить("ИДТранзиткарт");
		МассивИД.Добавить("ИДТатнефть");
		
		Для Каждого ТекущийИД Из МассивИД Цикл
			Если Не ПустаяСтрока(ЭлементМассива[ТекущийИД]) Тогда
				СтрокаПоиска = НоменклатураОбъект.ИдентификаторыКодовПоставщиков.Найти(ТекущийИД, "Комментарий77");
				Если СтрокаПоиска = Неопределено Тогда
					НоваяСтрокаИД = НоменклатураОбъект.ИдентификаторыКодовПоставщиков.Добавить();
					НоваяСтрокаИД.Комментарий77 = ТекущийИД;
					НоваяСтрокаИД.ИД = ЭлементМассива[ТекущийИД]; 
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		НоменклатураОбъект.Записать();	
	КонецЦикла;	
КонецПроцедуры
#КонецОбласти

#Область ЗагрузкаМестТранзакций

&НаКлиенте
Процедура ЗагрузкаМестТранзакции(Команда)
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаСкидок
&НаКлиенте
Процедура ЗагрузкаСкидок(Команда)
	
КонецПроцедуры
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьВсе(Команда)
	ЗагрузкаНоменклатуры(Неопределено);
КонецПроцедуры

#КонецОбласти
